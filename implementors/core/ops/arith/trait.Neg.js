(function() {var implementors = {};
implementors["maybe_owned"] = [{"text":"impl&lt;'l, V, OUT&gt; Neg for MaybeOwned&lt;'l, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Neg&lt;Output = OUT&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&amp;'l V: Neg&lt;Output = OUT&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'l, V, OUT&gt; Neg for MaybeOwnedMut&lt;'l, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Neg&lt;Output = OUT&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&amp;'l V: Neg&lt;Output = OUT&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["typenum"] = [{"text":"impl Neg for Z0","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Unsigned + NonZero&gt; Neg for PInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Unsigned + NonZero&gt; Neg for NInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl Neg for ATerm","synthetic":false,"types":[]},{"text":"impl&lt;V, A&gt; Neg for TArr&lt;V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Neg,<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Neg,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()